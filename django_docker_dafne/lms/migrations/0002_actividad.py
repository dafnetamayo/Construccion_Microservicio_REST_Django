# Generated by Django 5.2.6 on 2025-10-21 20:33

from django.db import migrations, models
import django.db.models.deletion
from django.utils import timezone


def crear_datos_iniciales(apps, schema_editor):
    Curso = apps.get_model('lms', 'Curso')
    Leccion = apps.get_model('lms', 'Leccion')
    
    curso1 = Curso.objects.create(
        instructor="Instructor de Python",
        titulo="Introducción a Python",
        description="Aprende los fundamentos de programación con Python desde cero. Este curso está diseñado para principiantes sin experiencia previa en programación.",
        estado_publicacion="publicado",
        publicado_en=timezone.now(),
        creado_en=timezone.now(),
        publicado=True
    )
    
    curso2 = Curso.objects.create(
        instructor="Instructor de Django",
        titulo="Desarrollo Web con Django",
        description="Aprende a crear aplicaciones web robustas y escalables con Django, el framework web de Python más popular.",
        estado_publicacion="publicado",
        publicado_en=timezone.now(),
        creado_en=timezone.now(),
        publicado=True
    )
    
    curso3 = Curso.objects.create(
        instructor="Instructor de Ciencia de Datos",
        titulo="Ciencia de Datos con Python",
        description="Domina las herramientas esenciales para análisis de datos: NumPy, Pandas, Matplotlib y Scikit-learn.",
        estado_publicacion="publicado",
        publicado_en=timezone.now(),
        creado_en=timezone.now(),
        publicado=True
    )
    
    curso4 = Curso.objects.create(
        instructor="Instructor de React",
        titulo="Desarrollo Frontend con React",
        description="Aprende a crear interfaces de usuario modernas y reactivas con la biblioteca más popular de JavaScript.",
        estado_publicacion="publicado",
        publicado_en=timezone.now(),
        creado_en=timezone.now(),
        publicado=True
    )
    
    curso5 = Curso.objects.create(
        instructor="Instructor de JavaScript",
        titulo="JavaScript Moderno",
        description="Domina JavaScript desde los fundamentos hasta las características más avanzadas de ES6+ y más allá.",
        estado_publicacion="publicado",
        publicado_en=timezone.now(),
        creado_en=timezone.now(),
        publicado=True
    )
    
    curso6 = Curso.objects.create(
        instructor="Instructor de DevOps",
        titulo="DevOps con Docker y Kubernetes",
        description="Aprende a implementar flujos de trabajo DevOps modernos utilizando contenedores y orquestación.",
        estado_publicacion="borrador",
        creado_en=timezone.now(),
        publicado=False
    )
    
    cursos_lecciones = {
        curso1: [
            {"nombre": "Introducción a Python", "orden": 0, "duration": 30, "modulos": 1},
            {"nombre": "Variables y Tipos de Datos", "orden": 1, "duration": 45, "modulos": 2},
            {"nombre": "Estructuras de Control", "orden": 2, "duration": 60, "modulos": 3},
            {"nombre": "Funciones en Python", "orden": 3, "duration": 45, "modulos": 2},
            {"nombre": "Programación Orientada a Objetos", "orden": 4, "duration": 90, "modulos": 4}
        ],
        curso2: [
            {"nombre": "Introducción a Django", "orden": 0, "duration": 40, "modulos": 1},
            {"nombre": "Modelos y Base de Datos", "orden": 1, "duration": 60, "modulos": 3},
            {"nombre": "Vistas y Templates", "orden": 2, "duration": 50, "modulos": 2},
            {"nombre": "Formularios y Validación", "orden": 3, "duration": 55, "modulos": 2},
            {"nombre": "API REST con Django Rest Framework", "orden": 4, "duration": 70, "modulos": 3}
        ],
        curso3: [
            {"nombre": "Introducción a la Ciencia de Datos", "orden": 0, "duration": 35, "modulos": 1},
            {"nombre": "NumPy para Cálculo Numérico", "orden": 1, "duration": 50, "modulos": 2},
            {"nombre": "Pandas para Análisis de Datos", "orden": 2, "duration": 65, "modulos": 3},
            {"nombre": "Visualización con Matplotlib", "orden": 3, "duration": 55, "modulos": 2},
            {"nombre": "Machine Learning con Scikit-learn", "orden": 4, "duration": 80, "modulos": 4}
        ],
        curso4: [
            {"nombre": "Fundamentos de React", "orden": 0, "duration": 45, "modulos": 2},
            {"nombre": "Componentes y Props", "orden": 1, "duration": 50, "modulos": 2},
            {"nombre": "Estado y Ciclo de Vida", "orden": 2, "duration": 60, "modulos": 3},
            {"nombre": "Hooks en React", "orden": 3, "duration": 70, "modulos": 3},
            {"nombre": "Enrutamiento con React Router", "orden": 4, "duration": 55, "modulos": 2}
        ],
        curso5: [
            {"nombre": "Fundamentos de JavaScript", "orden": 0, "duration": 40, "modulos": 2},
            {"nombre": "Funciones y Scope", "orden": 1, "duration": 50, "modulos": 2},
            {"nombre": "Objetos y Prototipos", "orden": 2, "duration": 55, "modulos": 3},
            {"nombre": "ES6+ Características Modernas", "orden": 3, "duration": 65, "modulos": 3},
            {"nombre": "Asincronía con Promesas y Async/Await", "orden": 4, "duration": 70, "modulos": 3}
        ]
    }
    
    for curso, lecciones in cursos_lecciones.items():
        for leccion_data in lecciones:
            Leccion.objects.create(
                curso=curso,
                nombre_leccion=leccion_data["nombre"],
                contenido=f"Contenido detallado para la lección: {leccion_data['nombre']}. Este contenido incluye ejemplos prácticos, ejercicios y material complementario.",
                orden=leccion_data["orden"],
                n_modulos=leccion_data["modulos"],
                duration=leccion_data["duration"]
            )


class Migration(migrations.Migration):

    dependencies = [
        ('lms', '0001_initial'),
    ]

    operations = [
        
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('rol', models.CharField(choices=[('estudiante', 'Estudiante'), ('instructor', 'Instructor'), ('admin', 'Administrador')], default='estudiante', max_length=20)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructor', models.CharField(max_length=100)),
                ('titulo', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('estado_publicacion', models.CharField(choices=[('borrador', 'Borrador'), ('publicado', 'Publicado'), ('archivado', 'Archivado')], default='borrador', max_length=20)),
                ('publicado_en', models.DateTimeField(blank=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('publicado', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Leccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_leccion', models.CharField(max_length=200)),
                ('contenido', models.TextField()),
                ('orden', models.PositiveIntegerField(default=0)),
                ('n_modulos', models.PositiveIntegerField(default=1)),
                ('duration', models.PositiveIntegerField(default=0, help_text='Duración en minutos')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecciones', to='lms.curso')),
            ],
            options={
                'verbose_name': 'Lección',
                'verbose_name_plural': 'Lecciones',
                'ordering': ['curso', 'orden'],
                'unique_together': {('curso', 'orden')},
            },
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('completada', 'Completada'), ('cancelada', 'Cancelada')], default='activa', max_length=20)),
                ('inscrito_en', models.DateTimeField(auto_now_add=True)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to='lms.curso')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to='lms.usuario')),
            ],
            options={
                'verbose_name': 'Inscripción',
                'verbose_name_plural': 'Inscripciones',
                'unique_together': {('usuario', 'curso')},
            },
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField()),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='lms.curso')),
                ('referencia_leccion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='lms.leccion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='lms.usuario')),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
                'ordering': ['-creado_en'],
            },
        ),
        
        migrations.RunPython(crear_datos_iniciales),
    ]
